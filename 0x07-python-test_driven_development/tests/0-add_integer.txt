The ``Addition`` module
=======================

Import add integer
>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(0, 8)
8

>>> add_integer(0, "dd")
Traceback (most recent call last):
	...
TypeError: b must be an integer

>>> add_integer(-9, -9)
-18

>>> add_integer(999, 999)
1998

>>> add_integer(0, 0)
0

>>> add_integer(+9, +9)
18

>>> add_integer(-0, -0)
0

>>> add_integer(-0, +0)
0

>>> add_integer(2.0, 3.0)
5

>>> add_integer(2)
100

>>> add_integer("hello", 3)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(1,)
99

add_integer(float('nan'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nuru/Workspace/ALX/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 23, in add_integer
    return (int(a) + int(b))
ValueError: cannot convert float NaN to integer

>>> add_integer(2, float('nan'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nuru/Workspace/ALX/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 23, in add_integer
    return (int(a) + int(b))
ValueError: cannot convert float NaN to integer

add_integer(float('inf'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nuru/Workspace/ALX/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 23, in add_integer
    return (int(a) + int(b))
OverflowError: cannot convert float infinity to integer
